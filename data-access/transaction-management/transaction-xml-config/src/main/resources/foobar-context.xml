<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <!-- 1. Data Source -->
    <!--
        We use DriverManagerDataSource and explicitly set MVCC=TRUE.
        This makes H2's isolation levels behave more like standard production databases,
        which is critical for this test to pass.
    -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.h2.Driver"/>
        <property name="url" value="jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>

    <!--
        This bean initializes the database using our schema script.
        It's a more robust method than using INIT=RUNSCRIPT in the URL.
    -->
    <bean id="databaseInitializer" class="org.springframework.jdbc.datasource.init.DataSourceInitializer">
        <property name="dataSource" ref="dataSource"/>
        <property name="databasePopulator">
            <bean class="org.springframework.jdbc.datasource.init.ResourceDatabasePopulator">
                <property name="scripts">
                    <list>
                        <value>classpath:foobar-schema.sql</value>
                    </list>
                </property>
            </bean>
        </property>
    </bean>

    <!-- 2. Service Beans -->
    <bean id="barService" class="com.dangminhphuc.dev.transaction.xml.foobar.service.BarServiceImpl">
        <constructor-arg ref="dataSource"/>
    </bean>
    <bean id="fooService" class="com.dangminhphuc.dev.transaction.xml.foobar.service.FooServiceImpl">
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="barService"/>
    </bean>
    <bean id="readerService" class="com.dangminhphuc.dev.transaction.xml.foobar.service.ReaderServiceImpl">
        <constructor-arg ref="dataSource"/>
    </bean>

    <!-- 3. Transaction Manager -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 4. Transactional Advice -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- Propagation Rules -->
            <tx:method name="insertFooRequired" propagation="REQUIRED"/>
            <tx:method name="insertFooRequiredThenRollback" propagation="REQUIRED"/>
            <tx:method name="outerRequired_innerRequiresNew_thenRollbackOuter" propagation="REQUIRED"/>
            <tx:method name="insertBar" propagation="REQUIRES_NEW"/>
            <tx:method name="updateFooName" propagation="REQUIRES_NEW"/>

            <!-- Isolation Rules -->
            <tx:method name="readNameTwiceInTransaction" isolation="REPEATABLE_READ"/>
            <tx:method name="countFoosWithReadUncommitted" isolation="READ_UNCOMMITTED" read-only="true"/>
            <tx:method name="countFoosWithReadCommitted" isolation="READ_COMMITTED" read-only="true"/>

            <!-- A default for the simple insertFoo method -->
            <tx:method name="insertFoo" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- 5. AOP Configuration -->
    <aop:config>
        <aop:advisor advice-ref="txAdvice"
                     pointcut="execution(* com.dangminhphuc.dev.transaction.xml.foobar.service.*.*(..))"/>
    </aop:config>

</beans>
